<template>
	<view>
		<cu-custom bgColor="bg-gradual-blue" :isBack="true"><block slot="content">原纸出/退仓</block></cu-custom>
			<view class="cu-form-group border-top">
				<view class="title">指ㅤ令:</view>
				<input v-model="paperOutFormItems.instruct" @blur="paperOutInstructBlur" placeholder="请输入或扫描指令:0+0+0+0+0" name="input" />
				<button @click="turnOnScanCode('orderNo')" type="primary" size="mini">扫描</button>
			</view>
			<view class="flex border-top">
				<view class="flex-sub">
					<!-- <selectDropdown
						:otherHeight='otherHeight'
						title="线ㅤ别"
						url="appFindLineSeparation"
						ref=" " 
						v-model="paperOutFormItems.line"
						placeholdertext="请选择线别"
					></selectDropdown> -->
					<view class="cu-form-group">
						<view class="title">线ㅤ别:</view>
						<input @click="setSearchDataListSource('lineSeparation')" disabled v-model="paperOutFormItems.line" placeholder="请输入线别" name="input" />
						<text @click="setSearchDataListSource('lineSeparation')" class="cuIcon-rounddown text-green"></text>
					</view>
				</view>
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">班ㅤ别:</view>
						<input @click="setSearchDataListSource('classBan')" disabled v-model="paperOutFormItems.group" placeholder="请输入班别" name="input" />
						<text @click="setSearchDataListSource('classBan')" class="cuIcon-rounddown text-green"></text>
					</view>
				</view>
			</view>
			<view class="flex border-top">
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">发料人:</view>
						<input @click="setSearchDataListSource('lssue')" disabled v-model="paperOutFormItems.outUser" placeholder="请输入发料" name="input" />
						<text @click="setSearchDataListSource('lssue')" class="cuIcon-rounddown text-green"></text>
					</view>
				</view>
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">领用人:</view>
						<input @click="setSearchDataListSource('receive')" disabled v-model="paperOutFormItems.inUser" placeholder="请输入领料" name="input" />
						<text @click="setSearchDataListSource('receive')" class="cuIcon-rounddown text-green"></text>
					</view>
				</view>
			</view>
			<view class="flex border-top">
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">直ㅤ径:</view>
						<input @blur="getwet" v-model="paperOutFormItems.outwarehouse" :disabled="(LastState == '出仓')" name="input" placeholder="请输入直径"/>
					</view>
				</view>
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">重ㅤ量:</view>
						<input @blur="compareEwt"  :disabled="(LastState == '出仓')" v-model="paperOutFormItems.ewt" placeholder="请输入重量" name="input" />
					</view>
				</view>
			</view>
			<!-- 数据查询列表 -->
			<view  class="grid-warp" v-for="(item,index) in fromdata" :key='index'>
				<view class="grid-title">
					<view>原纸信息</view>
					<view v-if="LastState !='出仓'">
						<text>最后出仓:{{item.Owt}}</text>
					</view>
				</view>
				<view class="grid-body">
					<view class="grid-flex padding-10">
						<view>
							<text>卷号:{{item.CoilNo}}</text>
						</view>
					</view>
					<view class="grid-flex padding-10">
						<view>
							<text>供应商:{{item.VendorName}}</text>
						</view>
					</view>
					<view class="grid-flex padding-10">
						<view>
							<text>类型:{{item.SPaperName}}</text>
						</view>
					</view>
					<view class="grid-flex padding-10">
						<view>
							<text>门幅:{{item.Width}}</text>
						</view>
					</view>
				<!-- 	<view class="grid-flex padding-10">
						<view>
							<text>状态:{{item.StationLink}}</text>
						</view>
					</view> -->
				</view>
			</view>
			<!--  侧边搜索列表 -->
			<searchForm @getSelectDataInfo="getSelectDataInfo" :dataSource="dataSource" ref='searchForm'></searchForm>
			<!-- 退出仓状态 -->
			<view class="lastState">
				<view style="color: #007AFF; font-size: 20px;">{{LastState}}</view>
				<view v-if="hideero == true" style="color: red;">异常提醒：无此卷号，操作不成功！</view>
			</view>
			<!-- 底部按钮 -->
			<view class="chucangbtm">
				<view class="flex solid-bottom padding justify-around elBtn" ref="elBtn">
					<view>	<button @click="resetFrom"  type="primary" size="mini" class="bg-grey radius">清除</button></view>
					<!-- <view style="margin-top: 5px;"> <text>总卷数:{{numbertext}}</text>	</view> -->
					<view>	<button :disabled="disabledEnd" @click="paprtIn"  type="primary" size="mini" class="bg-grey radius">确认</button></view>
				</view>
			</view>
			<!-- <view class="cu-form-group border-top"><textarea maxlength="-1" v-model="paperOutFormItems.desc" placeholder="请输入备注"></textarea></view> -->
			<!-- v-if="paperOutBtnShow" -->
			<!-- <view class="margin-text-center"><button @click="paperOut()"  type="primary" class="primary-btn">退ㅤ仓</button></view> -->
	</view>
</template>


<script>
import zTable from '@/components/z-table/z-table.vue';
import cuCustom from '@/ui/colorui/components/cu-custom.vue';
import request from '@/utils/request.js';
import dateFormat from '@/utils/dateFormat.js';
import searchForm from '@/components/searchForm/searchDataList.vue.vue'
export default {
	name: 'paperOB', ///原纸出退仓
	components: { zTable, cuCustom, searchForm },
	data() {
		return {
			disabledEnd:false,//确认按钮禁用
			hideero:false,//异常提醒隐藏字段
			LastState:"",//判断退出仓
			LastStateEnglish:"",//判断退出仓
			dataSource:[],//数据源
			fromdata:[],//原纸信息
			scanType: 'orderNo', //scanType:指令 rollNo:卷号
			TabCur: 0,
			scrollLeft: 0,
			lineSeparationList: [],//线别
			classBanList:[],//班别
			lssueList:[],//发料
			receiveList:[],//领用
			errorContent: '暂无数据', //'数据加载中...',
			tableHeight: 500, //表格高度
			paperStoreTableData: [],
			operStatus: '',
			paperOutBtnShow: false,
			paperBackBtnShow: false,
			paperOutFormItems: {
				//退仓
				outwarehouse:0,//直径
				instruct: '', //指令
				line: '', //线别
				lineCode:'',
				group: '', //班别
				groupCode:'',
				outUser: '', //发料
				outUserCode:'',
				inUser: '', //领料,
				inUserCode:'',
				ewt: '0', //重量
			},
		};
	},
	computed: {
		storeTableHeight() {
			return this.screen.height / 2 + 25;
		}
	},
	// #ifdef H5
	mounted() {
		this.getlineSeparationList()//线别
		this.getclassBanList()//班别
		this.getlssueList()//发料
		this.getreceiveList()//领用
	},
	// #endif
	// #ifndef H5
	onReady() {
		this.getlineSeparationList()//线别
		this.getclassBanList()//班别
		this.getlssueList()//发料
		this.getreceiveList()//领用
	},
	// #endif
	methods: {
		// 确认提交
		paprtIn(){
			this.disabledEnd = true
			if(this.paperOutFormItems.lineCode == ''){
				this.toast.message('请扫描指令或选择线别')
				this.disabledEnd = false
				return;
			}
			if(this.paperOutFormItems.groupCode == ''){
				this.toast.message('请扫描指令或选择班别')
				this.disabledEnd = false
				return;
			}
			if(this.paperOutFormItems.outUserCode == ''){
				this.toast.message('请扫描指令或选择发料人')
				this.disabledEnd = false
				return;
			}
			if(this.paperOutFormItems.inUserCode == ''){
				this.toast.message('请扫描指令或选择领料人')
				this.disabledEnd = false
				return;
			}
			if(this.fromdata.length == 0){
				this.toast.message('请扫描卷号')
				this.disabledEnd = false
				return;
			}
			// if(this.paperOutFormItems.outwarehouse == 0 && this.LastState == '退仓'){
			// 	this.toast.message('请输入直径')
			// 	this.disabledEnd = false
			// 	return;
			// }
			if(this.paperOutFormItems.ewt == 0){
				this.toast.message('请输入重量')
				this.disabledEnd = false
				return;
			}
			// if(this.hideero == true){
			// 	this.toast.message('请重新扫描卷号')
			// 	this.disabledEnd = false
			// 	return;
			// }
			this.toast.loading();
			let user = this.cache.get(this.appConst.CLIENT_USER_CACHE_NAME)
			let data = {
				Line:this.paperOutFormItems.lineCode,//---线别
				Group:this.paperOutFormItems.groupCode,//--班别
				Oper:user.erpUserCode,//--操作人
				Flag:this.LastStateEnglish,//--提交类型
				// OperDate:new Date()
				Coil:this.fromdata[0].CoilNo,//--卷号
				OutUseID:this.paperOutFormItems.outUserCode,//--发料人
				InUseID:this.paperOutFormItems.inUserCode,//--领料人
				Wt:this.paperOutFormItems.ewt,//--重量
				Time:0,
			}
			request.post('/warehouse/warehouse/execute/appAspExeuteSPaperSimpleAutoScan_InI',data)
			.then(res=>{
				console.log(res)
				if(res.list.length>0){
					this.toast.hide();
					this.toast.message('提交成功')
					this.disabledEnd = false
				}else{
					this.toast.hide();
					this.toast.message('提交失败')
					this.disabledEnd = false
				}
			}).catch(err=>{
				this.toast.hide();
				this.toast.message('提交失败')
				this.disabledEnd = false
			})
			this.resetFrom();
		},
		// 输入直径计算重量
		getwet(){
			if(this.paperOutFormItems.instruct == ''){
				this.toast.message('请扫描卷号')
				return;
			}
			let data = {
				Coil:this.paperOutFormItems.instruct,
				SPaperDia:this.paperOutFormItems.outwarehouse
			}
			request.post('/warehouse/warehouse/execute/appAspCalacSPaperBackTemp',data)
			.then(res=>{
				console.log(res)
				this.paperOutFormItems.ewt =  res.list[0].Wt
				this.compareEwt()
			})
		},
		//重量不能大于最后出仓重量
		compareEwt(){
			if(this.fromdata.length == 0){
				return
			}
			let ewt = Number(this.paperOutFormItems.ewt)
			let Owt = Number(this.fromdata[0].Owt)
			if(ewt>Owt){
				this.toast.message('退仓重量不能大于最后出仓重量')
				this.paperOutFormItems.ewt = this.fromdata[0].Owt
			}
		},
		// 清除
		resetFrom(){
			this.fromdata = [],
			this.paperOutFormItems.instruct = '';
			this.paperOutFormItems.outwarehouse = 0;
			this.paperOutFormItems.ewt = 0;
			this.hideero = false;
			this.LastState = "";
		},
		//获取线别
		getlineSeparationList(){
			request.post('/scan/lineSeparation').then(res=>{
				// console.log(res)
				let resData=res.map(item=>{
					let formatData = {
						type:item.code,
						ct_Desc:item.name
					}
					return formatData
				})
				this.lineSeparationList = resData
				// console.log(this.lineSeparationList)
			})
		},
		//获取班别
		getclassBanList(){
			let data = {
				type:2,
				procType:5,
				modelCode:'spaper_in_out'
			}
			request.post(`/scan/classBan`).then(res=>{
				// console.log(res)  
				let resData=res.map(item=>{
					let formatData = {
						type:item.code,
						ct_Desc:item.name
					}
					return formatData
				})
				this.classBanList = resData
				// console.log(this.classBanList)
			})
		},
		//获取发料
		getlssueList(){
			let data = {
				workType:'7,8,18',
				modelCode:'spaper_in_out'
			}
			request.post('/warehouse/warehouse/execute/appFindUser',data).then(res=>{
				// console.log(res)
				let resData=res.list.map(item=>{
					let formatData = {
						type:item.value,
						ct_Desc:item.text
					}
					return formatData
				})
				this.lssueList = resData
				// console.log(this.lssueList)
			})
		},
		//获取领用
		getreceiveList(){
			let data = {
				workType:'7,8,18',
				modelCode:'spaper_in_out'
			}
			request.post('/warehouse/warehouse/execute/appFindUser',data).then(res=>{
				// console.log(res)
				let resData=res.list.map(item=>{
					let formatData = {
						type:item.value,
						ct_Desc:item.text
					}
					return formatData
				})
				this.receiveList = resData
				// console.log(this.receiveList)
			})
		},
		//右侧弹框
		setSearchDataListSource(type){
			this.currentSelect = type
			this.$refs['searchForm'].isMultipel=false
			this.$refs['searchForm'].isShowSearchList=true
		   if(type==='lineSeparation'){
				//线别
				 this.dataSource = this.lineSeparationList
				 this.$refs['searchForm'].dataSourceList =this.lineSeparationList
		   }else if(type==='classBan'){
			   this.dataSource = this.classBanList//班别
			   this.$refs['searchForm'].dataSourceList =this.classBanList
		   }else if(type==='lssue'){
			   this.dataSource = this.lssueList//发料
			   this.$refs['searchForm'].dataSourceList =this.lssueList
		   }else{
			   this.dataSource = this.receiveList//领用
			   this.$refs['searchForm'].dataSourceList =this.receiveList
		   }
		},
		// 选择  线别/班别/客户  数据回调事件
		getSelectDataInfo(item){
			// debugger
			switch (this.currentSelect){
				case 'lineSeparation'://线别
				this.paperOutFormItems.line=item.ct_Desc
				this.paperOutFormItems.lineCode=item.type
					break;
				case 'classBan'://班别
				this.paperOutFormItems.group=item.ct_Desc
				this.paperOutFormItems.groupCode=item.type
					break;
				case 'lssue'://发料
				this.paperOutFormItems.outUser=item.ct_Desc
				this.paperOutFormItems.outUserCode=item.type
					break;
				case 'receive'://领用
				this.paperOutFormItems.inUser=item.ct_Desc
				this.paperOutFormItems.inUserCode=item.type
					break;
				default:
					break;
			}
		},
		// 指令扫描拿到线别
		getlineSeparation(data){
			for(let i = 0; i<this.lineSeparationList.length;i++){
				if(this.lineSeparationList[i].type == data){
					this.paperOutFormItems.line = this.lineSeparationList[i].ct_Desc
					this.paperOutFormItems.lineCode = this.lineSeparationList[i].type
				}
			}
		},
		// 指令扫描拿到班别
		getclassBan(data){
			for(let i = 0; i<this.classBanList.length;i++){
				if(this.classBanList[i].type == data){
					this.paperOutFormItems.group = this.classBanList[i].ct_Desc
					this.paperOutFormItems.groupCode= this.classBanList[i].type
				}
			}
		},
		// 指令扫描拿到发料
		getlssue(data){
			for(let i = 0;i<this.lssueList.length;i++){
				if(this.lssueList[i].type == data){
					this.paperOutFormItems.outUser = this.lssueList[i].ct_Desc
					this.paperOutFormItems.outUserCode = this.lssueList[i].type
				}
			}
		},
		// 指令扫描拿到领用
		getreceiveation(data){
			for(let i = 0; i<this.receiveList.length; i++){
				if(this.receiveList[i].type == data){
					this.paperOutFormItems.inUser = this.receiveList[i].ct_Desc
					this.paperOutFormItems.inUserCode = this.receiveList[i].type
				}
			}
		},
		//===打开扫描===
		turnOnScanCode(type) {
			this.scanType = type;
			let _self = this;
			// 调起条码扫描
			uni.scanCode({
				scanType: 'barCode',
				success: function(res) {
					// console.log('条码类型：' + res.scanType);
					console.log('条码内容：' + res.result);
					_self.paperOutFormItems.instruct = res.result
					let Symbol = res.result.indexOf("+")
					// debugger
					if(Symbol == 6){
						_self.restcommand()
						_self.setcommand()
						if(_self.paperOutFormItems.line == ''){
							_self.toast.message('指令线别错误')
						}
						if(_self.paperOutFormItems.group == ''){
							_self.toast.message('指令班别错误')
						}
						if(_self.paperOutFormItems.outUser == ''){
							_self.toast.message('指令发料人错误')
						}
						if(_self.paperOutFormItems.inUser == ''){
							_self.toast.message('指令领用人错误')
						}
					}else{
						// 卷号
						_self.paperOutInstructBlur()
					}

				}
			});
		},
		// 指令清空
		restcommand(){
			this.paperOutFormItems.line = ''
			this.paperOutFormItems.group = ''
			this.paperOutFormItems.outUser = ''
			this.paperOutFormItems.inUser = ''
			this.paperOutFormItems.lineCode = ''
			this.paperOutFormItems.groupCode = ''
			this.paperOutFormItems.outUserCode = ''
			this.paperOutFormItems.inUserCode = ''
		},
		// 判断是否为指令
		setcommand(){
			// debugger
			this.hideero=false
			let  myarray = this.paperOutFormItems.instruct.split("+");
				if(myarray[0] == '111111'){
					this.LastState = "出仓"
				}else{
					this.LastState = "退仓"
				}
				this.restcommand()
				this.getlineSeparation(myarray[1])
				if(this.paperOutFormItems.line == ''){
					this.toast.message('指令线别错误')
				}
				this.getclassBan(myarray[2])
				if(this.paperOutFormItems.group == ''){
					this.toast.message('指令班别错误')
				}
				this.getlssue(myarray[3])
				if(this.paperOutFormItems.outUser == ''){
					this.toast.message('指令发料人错误')
				}
				this.getreceiveation(myarray[4])
				if(this.paperOutFormItems.inUser == ''){
					this.toast.message('指令领用人错误')
				}
				// this.paperOutFormItems.instruct = this.paperOutFormItems.instruct
				this.paperOutFormItems.instruct = ''
				if(this.fromdata.length === 0){
					this.resetFrom()
				}
		},
		//===指令INPU焦点离开===回调事件 ===出仓
		paperOutInstructBlur() {
			// debugger
			if(this.paperOutFormItems.instruct == ''){
				this.toast.message('请扫描卷号或指令')
				return;
			}
			let Symbol = this.paperOutFormItems.instruct.indexOf("+")
			if(Symbol == 6){
				this.setcommand()
				return;
			}
			// this.resetFrom()
			this.LastState = ""
			let Flag 
			if(this.LastState == '出仓'){
				 Flag = 111111
			}else if(this.LastState == '退仓'){
				 Flag = 222222
			}else{
				Flag = 2
			}
			let data = {
				Coil:this.paperOutFormItems.instruct,
				Flag
			}
			this.toast.loading()
			request.post('/warehouse/warehouse/execute/appSpGetSPaperStoreForPDA',data)
			.then(res=>{
				// console.log(res.list)
				if(res.list.length != 0){
					this.fromdata = res.list
					// this.LastState = res.list[0].LastState
					this.LastStateEnglish = res.list[0].LastState
					if(res.list[0].LastState == "out"){
						this.LastState = '出仓'
						this.paperOutFormItems.ewt = res.list[0].Ewt
					}else{
						this.LastState = '退仓'
						this.paperOutFormItems.ewt = res.list[0].Ewt
						// if(res.list[0].Owt == 0){
							this.getappSpGetSPaperStoreSelect(res.list)
						// }
					}
					this.hideero = false
				}else{
					this.toast.message('卷号错误')
					this.resetFrom()
					this.hideero = true
				}
				this.toast.hide();
			}).catch(err=>{
				this.toast.message('数据加载失败')
				this.resetFrom()
				this.toast.hide();
			})
		},
		//===指令INPU焦点离开===回调事件 ===退仓,
		getappSpGetSPaperStoreSelect(data){
			let Coil = data[0].CoilNo
			request.post('/warehouse/warehouse/execute/appSpGetSPaperStoreSelect',{Coil:Coil}).then(res=>{
				// console.log(res)
				this.paperOutFormItems.line = res.list[0].LineName
				this.paperOutFormItems.lineCode = res.list[0].Line
				this.paperOutFormItems.group = res.list[0].ClassName
				this.paperOutFormItems.groupCode = res.list[0].Class
				this.paperOutFormItems.outUser = res.list[0].FLRUName
				this.paperOutFormItems.outUserCode = res.list[0].FLRU
				this.paperOutFormItems.inUser = res.list[0].LLRUName
				this.paperOutFormItems.inUserCode = res.list[0].LLRU
			})
		}
		
		
		
	}
};
</script>

<style scoped>
.margin-text-center {
	text-align: center;
	margin: 20rpx;
}
.border-top {
	border-top: 1px solid #eee;
}
.cu-form-group .title {
	min-width: calc(4em + 15px);
}
.chucangbtm{
	position: fixed;
	bottom: 0px;
	width: 100%;
	background-color: #FFFFFF;
	z-index: 100;
}
.lastState{
	margin-top: 30px;
	/* bottom: 0px; */
	display: flex;
	flex-direction:column;
	/* padding: 20px; */
	/* justify-content:center; */
	text-align: center;
}
</style>
