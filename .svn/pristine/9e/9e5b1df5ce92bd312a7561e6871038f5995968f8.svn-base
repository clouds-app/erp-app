<template>
	<view>
		<cu-custom bgColor="bg-gradual-blue" :isBack="true"><block slot="content">添加账户</block></cu-custom>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">识别码:</view>
					<input v-model="formModel.customerCode" @tap="clientCustomerInput" :disabled="true" type="text" placeholder="请输入单位识别码" name="input" maxlength="7" />
				</view>
			</view>
		</view>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">手机:</view>
					<input v-model="formModel.phoneNo" type="number" placeholder="请输入手机号码" name="input" maxlength="11" />
				</view>
			</view>
		</view>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">密码:</view>
					<input v-model="formModel.password" type="password" placeholder="请输入密码"name="input" maxlength="20" />
				</view>
			</view>
		</view>
		<view class="margin-text-center margin-top" style="padding: 0 50rpx;">
			<button type="primary" @tap="userRegisterProvider" class="primary-btn">确  定</button>
		</view>
		
		<uni-drawer ref="customerDrawer" mode="right">
			<view :style="{ 'padding-top': CustomBar + StatusBar + 'px' }">
				<uni-list :style="{ height: screen.height - (CustomBar + StatusBar + 44) + 'px','overflow-y':'scroll'}">
					<uni-list-item v-for="(item, index) in customerList" @tap="customerClick(item.name , item.code)" :title="item.name + '-' + item.code" :show-arrow="false" :key="index"></uni-list-item>
				</uni-list>
			</view>
		</uni-drawer>
	</view>
</template>

<script>
	import cuCustom from '@/ui/colorui/components/cu-custom.vue'
	import request from '@/utils/request.js';
	import {emptyValidator} from '@/utils/validator.js'
	export default {
		components:{ cuCustom },
		data() {
			return {
				customerDrawer:false,
				formModel:{
					customerCode:'',
					name:'',
					password:'',
					phoneNo:''
				},
				customerList:[]
			}
		},
		methods: {
			userRegisterProvider(){
				this.toast.loading()
				request.post('/user/relation/save',this.formModel).then(res => {
					this.toast.hide()
					this.toast.message('账户关联成功')
					uni.$emit('account-relation-success')
					this.router.back(1)
				}).catch(err =>{
					this.toast.hide()
					if(typeof err === 'string'){
						this.toast.message(err)
					}else{
						this.toast.message('账户关联成功失败')
					}
				})
			},
			getCustomerList(){
				request.get('/user/relation/customerList').then(res=>{
					this.customerList = res;
				})
			},
			customerClick(name,code){
				this.formModel.customerCode = code;
				this.$refs.customerDrawer.close()
			},
			clientCustomerInput(){
				this.$refs.customerDrawer.open()
			}
		},
		created() {
			this.getCustomerList();
		}
	}
</script>

<style>

</style>
