<template>
	<view>
		<cu-custom class="titlefrom" bgColor="bg-gradual-blue" :isBack="true"><block slot="content">纸板入库</block></cu-custom>
		<view class="flex border-top">
			<view class="flex-sub">
				<selectDropdown
					:otherHeight='otherHeight' 
					ref="lineDrawer"
					url="appFindLineSeparation"
					title="线ㅤ别"
					placeholdertext="ㅤ请选择线别"
					v-model='paperInFormItems.lineCode'
				></selectDropdown>
				<!-- <view class="title">线ㅤ别:</view>
				<input @click="setSearchDataListSource('line')" :disabled="true" v-model="paperInFormItems.line" placeholder="请输入线别" />
				<text @click="setSearchDataListSource('line')" class="cuIcon-rounddown text-green"></text>
			 -->
			</view>
			<view class="flex-sub">
				<selectDropdown
					:otherHeight='otherHeight' 
					ref="groupDrawer"
					url="appFindClassBan"
					title="班ㅤ别"
					placeholdertext="ㅤ请选择班别"
					v-model='paperInFormItems.groupCode'
					:params='groupparams'
				></selectDropdown>
				<!-- <view class="cu-form-group">
					<view class="title">班ㅤ别:</view>
					<input @click="setSearchDataListSource('deep')" :disabled="true" v-model="paperInFormItems.group" placeholder="请输入班别" />
					<text @click="setSearchDataListSource('deep')" class="cuIcon-rounddown text-green"></text>
				</view> -->
			</view>
		</view>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">仓ㅤ位:</view>
					<input @click="setSearchDataListSource('workHouse')" v-model="paperInFormItems.station" placeholder="请输入仓位" />
					<text @click="setSearchDataListSource('workHouse')" class="cuIcon-rounddown text-green"></text>
				</view>
			</view>
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">日ㅤ期:</view>
					<input :disabled="true" v-model="paperInFormItems.date"/>
					<!-- <picker mode="date">
						<view style="height: 100%;">
							{{paperInFormItems.date}}
						</view>
					</picker> -->
				</view>
			</view>
		</view>
		<view class="cu-form-group border-top">
			<view class="title">工单号:</view>
			<input v-model="paperInFormItems.fOrderNo" @blur="barCodeBlur" placeholder="请扫描工单号" />
			<button @click="turnOnScanCode('in')"  type="primary" size="mini">扫描</button>
		</view>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">客ㅤ户:</view>
					<input :disabled="true" v-model="paperInFormItems.CustName"/>
				</view>
			</view>
		</view>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">订单数:</view>
					<input :disabled="true" v-model="paperInFormItems.Qty"/>
				</view>
			</view>
		</view>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">已入库:</view>
					<input :disabled="true" v-model="paperInFormItems.INQty"/>
				</view>
			</view>
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title" style="color: red;">入库数:</view>
					<input type="number" @blur='checkFdNum' v-model="paperInFormItems.FQty" placeholder="请输入数量" />
				</view>
			</view>
		</view>
		<view class="flex border-top">
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">纸ㅤ质:</view>
					<input :disabled="true" v-model="paperInFormItems.ArtID"/>
				</view>
			</view>
			<view class="flex-sub">
				<view class="cu-form-group">
					<view class="title">楞ㅤ别:</view>
					<input :disabled="true" v-model="paperInFormItems.LB"/>
				</view>
			</view>
		</view>
		<view class="cu-form-group border-top">
			<view class="title">规ㅤ格:</view>
			<input :disabled="true" v-model="paperInFormItems.Size"/>
		</view>
		<view class="cu-form-group border-top">
			<view class="title">压ㅤ线:</view>
			<input :disabled="true" v-model="paperInFormItems.YxStr"/>
		</view>
		<view class="cu-form-group border-top">
			<view class="title">备ㅤ注:</view>
			<textarea :disabled="true" maxlength="-1" v-model="paperInFormItems.Oremark"></textarea>
		</view>
		<!-- 底部按钮 -->
		<view class="flex solid-bottom padding justify-around chucangbtm">
			<button @click="resetFrom"  type="primary" size="mini" class="bg-grey radius">清除</button>
			<button :disabled="disable" @click="paprtIn"  type="primary" size="mini" class="bg-grey radius">保存</button>
		</view>
		<!-- 抽屉 -->
		
		<!--  侧边搜索列表 -->
		<searchForm @getSelectDataInfo="getSelectDataInfo" :dataSource="dataSource" ref='searchForm'></searchForm>
		
		
	</view>
</template>

<script>
import selectDropdown from '@/components/selectDropdown/selectDropdown.vue'
import zTable from '@/components/z-table/z-table.vue';
import cuCustom from '@/ui/colorui/components/cu-custom.vue';
import request from '@/utils/request.js';
import searchForm from '@/components/searchForm/searchDataList.vue.vue'
export default {
	name: 'paperIn',
	components: { zTable, cuCustom, searchForm, selectDropdown },
	data() {
		return {
			groupparams:{type:2,procType:5,modelCode:'paper_in'},
			disable:true,
			otherHeight:0,//title高度
			modelVal:null,//存储是那个抽屉
			dataSource:[],//抽屉弹框数据
			deepList:[],//班别数据列表
			workHouseList:[],//仓位数据列表
			lineList:[],//线别数据列表
			modalName: null,
			TabCur: 0,
			scrollLeft: 0,
			dataTableList: [],
			errorContent: '暂无数据', //数据加载中...
			tableHeight: 0, //表格高度
			findGoodsTableDataItems: [],
			paperOutTableDataItems: [],
			paperInFormItems: {
				instruct: '', //指令
				station: '纸板成品仓位', //仓位				
				stationCode:'02',//仓位id
				fOrderNo: '', //工单号
				line: '', //线别
				lineCode:'',//线别id
				group: '', //班别
				groupCode:'',//班别id
				fQty: '', //数量
				fDNum: '', //板号,
				ArtID:'',//纸质id
				CustID:'',//客户id
				CustName:'',//客户名
				INQty:'',//已入库数
				FQty:'',//入库数
				LB:'',//楞别
				MinSize:'',//小尺寸
				Size:'',//规格
				YxStr:'',//压线
				Qty:'',//订单数
				Oremark:'',//备注
				date:new Date().toISOString().slice(0, 10),//日期
			},
			findGoodsItem: {
				fOrderNo: '' //工单号
			},
			paperOutItem: {
				fOrderNo: '', //工单号
				batch: ''
			},
		};
	},
	mounted() {
		this.getTableHeight()//班别列表
		this.getworkHouseList()//仓位数据列表
		// this.getlineList()//线别列表
	},

	onReady() {
		this.getTableHeight()//班别列表
		this.getworkHouseList()//仓位数据列表
		// this.getlineList()//线别列表
	},
	methods: {
		//获取指定内容占用高度,计算剩余高度 单位:PX
		getOtherContentHeight(className='bodyContentHeight'){
		  return new Promise((resolve, reject) => {
			   let eleHeight=0
			   let _self =this
			   let info = uni.createSelectorQuery().in(_self).select("."+className);
			  info.boundingClientRect(function(data) { //data - 各种参数
				 // console.log('other Height:'+data.height)  // 获取元素宽度
			 　　   _self.otherHeight = data.height
					eleHeight = data.height
					resolve(data.height)
			   }).exec(function (res) {
			   })
		  })
		},
		async getTableHeight(){
		  let _self=this
		  let otherHeight= await _self.getOtherContentHeight("titlefrom")
		  console.log(otherHeight)
		},
		//右侧弹框
		setSearchDataListSource(type){
			// debugger
			this.$refs.searchForm.$data.searchKeyword = ''
			this.currentSelect = type
			this.$refs['searchForm'].isMultipel=false
			this.$refs['searchForm'].isShowSearchList=true
		   if(type==='deep'){//班别
				// debugger
				this.dataSource = this.deepList
				this.$refs['searchForm'].dataSourceList =this.deepList
		   }else if(type==='line'){//仓位
			   this.dataSource = this.lineList
			   this.$refs['searchForm'].dataSourceList =this.lineList
		   }else {//仓位
			   this.dataSource = this.workHouseList
			   this.$refs['searchForm'].dataSourceList =this.workHouseList
			}
		},
		// 选择  线别/班别/客户  数据回调事件
		getSelectDataInfo(item){
			// debugger
			switch (this.currentSelect){
				case 'deep':
				this.paperInFormItems.group =item.ct_Desc
				this.paperInFormItems.groupCode = item.type
					break;
				case 'workHouse':
				this.paperInFormItems.station = item.ct_Desc
				this.paperInFormItems.stationCode = item.type
					break;
				case 'line':
				this.paperInFormItems.line = item.ct_Desc
				this.paperInFormItems.lineCode = item.type
					break;
				default:
					break;
			}
		},
		//线别列表
		// getlineList(){
		// 	this.toast.loading();
		// 	request.post(`/scan/lineSeparation`).then(res=>{
		// 		let resData=res.map(item=>{
		// 				let formatData = {
		// 					type:item.code,
		// 					ct_Desc:item.name
		// 				}
		// 				return formatData
		// 			})
		// 			this.lineList = resData
		// 			this.toast.hide();
		// 		}).catch(err=>{
		// 			this.toast.message('数据加载失败')
		// 	})
		// },
		// 获取仓位数据列表
		getworkHouseList(){
			this.toast.loading();
			request.post(`/scan/searchStation?type=2`).then(res=>{
				let resData=res.map(item=>{
					let formatData = {
						type:item.code,
						ct_Desc:item.name
					}
					return formatData
				})
				this.workHouseList = resData
				this.toast.hide();
			}).catch(err=>{
				this.toast.message('数据加载失败')
			})
		},
		// 获取班别数据列表
		// getdeepList(){
		// 	this.toast.loading();
		// 	request.post(`/scan/classBan?type=2&procType=5`).then(res=>{
		// 		let resData=res.map(item=>{
		// 			let formatData = {
		// 				type:item.code,
		// 				ct_Desc:item.name
		// 			}
		// 			return formatData
		// 		})
		// 		this.deepList = resData
		// 		this.toast.hide();
		// 	}).catch(err=>{
		// 		this.toast.message('数据加载失败')
		// 	})
		// },
		//入库数校验
		checkFdNum(){
			let FQty = Number(this.paperInFormItems.FQty) //入库数
			let INQty = Number(this.paperInFormItems.INQty) //已入库
			let Qty = Number(this.paperInFormItems.Qty) //订单数
			// let Qty
			if(	FQty>(Qty-INQty)){
				uni.showModal({
				    title: '提示',
				    content: '累计入库数已大于订单数,是否继续？',
				    success: (res)=> {
						if(res.cancel){
							this.paperInFormItems.FQty = ''
						}
				    }
				});
				// this.toast.message('入库数不能大于未入库数')
			}
		},
		//清除按钮
		resetFrom(){
			this.paperInFormItems.fOrderNo = ''
			this.paperInFormItems.fQty = ''
			this.paperInFormItems.fDNum = ''
			this.paperInFormItems.ArtID = ''
			this.paperInFormItems.CustID = ''
			this.paperInFormItems.CustName = ''
			this.paperInFormItems.INQty = ''
			this.paperInFormItems.LB = ''
			this.paperInFormItems.MinSize = ''
			this.paperInFormItems.Size = ''
			this.paperInFormItems.YxStr = ''
			this.paperInFormItems.Qty = ''
			this.paperInFormItems.Oremark = ''
			this.paperInFormItems.FQty = ''
		},
		//日期
		// DateChange(e) {
		// 	this.paperInFormItems.date = e.detail.value
		// },
		hideModal(e) {
			this.modalName = null
		},
		tabSelect(e) {
			this.TabCur = e.currentTarget.dataset.id;
			this.scrollLeft = (e.currentTarget.dataset.id - 1) * 60;
		},
		//打开扫描
		turnOnScanCode(type) {
			let _self = this;
			this.resetFrom()	
			// 调起条码扫描
			uni.scanCode({
				scanType: 'barCode',
				success: function(res) {
					// console.log('条码类型：' + res.scanType);
					console.log('条码内容：' + res.result);
					let a = res.result.indexOf(',')
					let b = 0
					console.log(a)
					if(a<0){
						b = res.result
					}else{
						b = res.result.substring(0,a)
					}
					console.log(b);
					switch (type) {
						case 'in': //入库
							_self.paperInFormItems.fOrderNo = b;
							_self.getParamsFromScanCode();
							break;
						case 'out': //出仓
							this.paperOutItem.fOrderNo = res.result;
							break;
						case 'search': //寻货
							this.findGoodsItem.fOrderNo = res.result;
							break;

						default:
							break;
					}
				}
			});
		},
		barCodeBlur() {
			// debugger
			if (this.paperInFormItems.lineCode == '') {
				this.toast.message('请先选择线别')
				return;
			}if (this.paperInFormItems.groupCode == '') {
				this.toast.message('请先选择班别')
				return;
			}if (this.paperInFormItems.stationCode == '') {
				this.toast.message('请先选择仓位')
				return;
			}
			if (this.paperInFormItems.fOrderNo == '') {
				this.toast.message('请输入或扫描条码')
				return;
			}
			this.getParamsFromScanCode();
		},
		//====入库====获取所需参数 从扫描中...
		getParamsFromScanCode() {
			// debugger
			let fOrderNo = this.paperInFormItems.fOrderNo
			let data =  []
			this.toast.loading();
			// request.post('/proc/execute/spGetPaperCOInfoForAPP',{OrderNo:fOrderNo})
			request.post('/proc/execute/appSpGetPaperCOInfoForAPP',{OrderNo:fOrderNo})
			.then(res=>{
				if(res.list.length===0){
					this.toast.message('对不起，系统没有此工单号，请重新扫描!');
					this.toast.hide();
					this.resetFrom()
					return;
				}
				this.disable = false
				data = res.list[0]
				this.paperInFormItems.ArtID = data.ArtID
				this.paperInFormItems.CustID = data.CustID
				this.paperInFormItems.CustName = data.CustName
				this.paperInFormItems.LB = data.LB
				this.paperInFormItems.MinSize = data.MinSize
				this.paperInFormItems.Oremark = data.Oremark
				this.paperInFormItems.Qty = data.Qty
				this.paperInFormItems.INQty = data.INQty
				this.paperInFormItems.Size = data.Size
				this.paperInFormItems.YxStr = data.YxStr
				this.paperInFormItems.FQty = data.FQty
				this.toast.hide();
			})			

			Object.assign(this.paperInFormItems, data);
		},
		//查询数据
		paperInRequest(data) {
			// debugger
			return request.post('/proc/execute/appSpScanOrder', data);
		},
		//确认提交===入仓===
		paprtIn() {
			// debugger
			if (this.paperInFormItems.lineCode == '') {
				this.toast.message('请输入线别');
				this.disable = false
				return;
			}
			this.disable = true
			if (this.paperInFormItems.stationCode == '') {
				this.toast.message('请输入仓位');
				this.disable = false
				return;
			}
			if (this.paperInFormItems.groupCode == '') {
				this.toast.message('请输入班别');
				this.disable = false
				return;
			}
			if (this.paperInFormItems.fOrderNo == '') {
				this.toast.message('请扫描工单号');
				this.disable = false
				return;
			}
			if (this.paperInFormItems.FQty == '') {
				this.toast.message('请输入入库数');
				this.disable = false
				return;
			}
			let BarCodeStr = this.paperInFormItems.fOrderNo+'*'
			+0+'*'+this.paperInFormItems.FQty
			+'*'+this.paperInFormItems.lineCode+'*'
			+this.paperInFormItems.groupCode
			let user = this.cache.get(this.appConst.CLIENT_USER_CACHE_NAME)
			let data = {
				UserID:user.erpUserCode,
				BarCodeStr: BarCodeStr,
				Station: this.paperInFormItems.stationCode,
				Flag: 0,
				FOrderNo: this.paperInFormItems.fOrderNo,
				FQty: this.paperInFormItems.FQty,
				FDNum: 0,
				FLine: this.paperInFormItems.lineCode,
				FClass: this.paperInFormItems.groupCode,
				Remark: this.paperInFormItems.Oremark,
				OrderQty: this.paperInFormItems.Qty
			};
			//debugger
			this.toast.loading();
			this.paperInRequest(data)
				.then(res => {
					//console.log(res)
					this.toast.hide();
					if (res.list && res.list[0].res == 1) {
						this.toast.message('入仓成功');
						this.resetFrom()
						this.disable = true
					} else {
						this.toast.message('入仓失败');
						this.getParamsFromScanCode()
					}
				})
				.catch(err => {
					this.toast.message('入仓失败');
					this.getParamsFromScanCode()
					this.toast.hide();
				});
		},
		
	}
};
</script>

<style>
.margin-text-center {
	text-align: center;
	margin: 20rpx;
}
.border-top {
	border-top: 1px solid #eee;
}
.cu-form-group .title {
	min-width: calc(4em + 15px);
}
.chucangbtm{
	position: fixed;
	bottom: 0px;
	width: 100%;
	background-color: #FFFFFF;
	z-index: 2;
}
</style>
